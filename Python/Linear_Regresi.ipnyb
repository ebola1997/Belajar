{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Linear Regresi.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ebola1997/Belajar/blob/Python/Linear_Regresi.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Perintah untuk dapat mengupload file ke dalam Google Collab"
      ],
      "metadata": {
        "id": "EWDXKZprgSPY"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UBg0d_tVsgro",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "outputId": "91d68e9c-02ea-4c0b-e1e7-b2402b26177a"
      },
      "source": [
        "#import file dari komputer\n",
        "from google.colab import files\n",
        "  \n",
        "  \n",
        "uploaded = files.upload()"
      ],
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-7551b287-c118-4a51-b681-ce91c6d26bdd\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-7551b287-c118-4a51-b681-ce91c6d26bdd\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving student-por.csv to student-por.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X1kiO9kACE6s"
      },
      "source": [
        "\n",
        "\n",
        "```\n",
        "# This is formatted as code\n",
        "```\n",
        "\n",
        "## Importing the libraries"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zMMnGeorBhOv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7ef1b9d9-9265-4d74-dce0-000a0109280e"
      },
      "source": [
        "pip install swifter"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting swifter\n",
            "  Downloading swifter-1.0.9-py3-none-any.whl (14 kB)\n",
            "Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from swifter) (1.1.5)\n",
            "Requirement already satisfied: bleach>=3.1.1 in /usr/local/lib/python3.7/dist-packages (from swifter) (4.1.0)\n",
            "Requirement already satisfied: parso>0.4.0 in /usr/local/lib/python3.7/dist-packages (from swifter) (0.8.3)\n",
            "Collecting psutil>=5.6.6\n",
            "  Downloading psutil-5.8.0-cp37-cp37m-manylinux2010_x86_64.whl (296 kB)\n",
            "\u001b[K     |████████████████████████████████| 296 kB 4.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: ipywidgets>=7.0.0 in /usr/local/lib/python3.7/dist-packages (from swifter) (7.6.5)\n",
            "Requirement already satisfied: cloudpickle>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from swifter) (1.3.0)\n",
            "Requirement already satisfied: dask[dataframe]>=2.10.0 in /usr/local/lib/python3.7/dist-packages (from swifter) (2.12.0)\n",
            "Requirement already satisfied: tqdm>=4.33.0 in /usr/local/lib/python3.7/dist-packages (from swifter) (4.62.3)\n",
            "Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from bleach>=3.1.1->swifter) (1.15.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from bleach>=3.1.1->swifter) (21.3)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach>=3.1.1->swifter) (0.5.1)\n",
            "Collecting partd>=0.3.10\n",
            "  Downloading partd-1.2.0-py3-none-any.whl (19 kB)\n",
            "Requirement already satisfied: toolz>=0.7.3 in /usr/local/lib/python3.7/dist-packages (from dask[dataframe]>=2.10.0->swifter) (0.11.2)\n",
            "Collecting fsspec>=0.6.0\n",
            "  Downloading fsspec-2021.11.1-py3-none-any.whl (132 kB)\n",
            "\u001b[K     |████████████████████████████████| 132 kB 57.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: numpy>=1.13.0 in /usr/local/lib/python3.7/dist-packages (from dask[dataframe]>=2.10.0->swifter) (1.19.5)\n",
            "Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (5.5.0)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (0.2.0)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (1.0.2)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (4.10.1)\n",
            "Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (5.1.1)\n",
            "Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (3.5.2)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->swifter) (5.1.3)\n",
            "Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->swifter) (5.1.1)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->swifter) (5.3.5)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (1.0.18)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (4.8.0)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (0.7.5)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (0.8.1)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (2.6.1)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (57.4.0)\n",
            "Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets>=7.0.0->swifter) (2.6.0)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets>=7.0.0->swifter) (4.9.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.0->swifter) (2018.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.0->swifter) (2.8.2)\n",
            "Collecting locket\n",
            "  Downloading locket-0.2.1-py2.py3-none-any.whl (4.1 kB)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0->ipywidgets>=7.0.0->swifter) (0.2.5)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (5.3.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (2.11.3)\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (5.6.1)\n",
            "Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.12.1)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (1.8.0)\n",
            "Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets>=7.0.0->swifter) (22.3.0)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.7.0)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (2.0.1)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (1.5.0)\n",
            "Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.5.0)\n",
            "Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.3)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.8.4)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.5.0->ipywidgets>=7.0.0->swifter) (0.7.1)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->bleach>=3.1.1->swifter) (3.0.6)\n",
            "Installing collected packages: locket, partd, fsspec, psutil, swifter\n",
            "  Attempting uninstall: psutil\n",
            "    Found existing installation: psutil 5.4.8\n",
            "    Uninstalling psutil-5.4.8:\n",
            "      Successfully uninstalled psutil-5.4.8\n",
            "Successfully installed fsspec-2021.11.1 locket-0.2.1 partd-1.2.0 psutil-5.8.0 swifter-1.0.9\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "psutil"
                ]
              }
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Disini akan melakukan pengujian klasifikasi dengan algoritma linear Regresi.\n",
        "Pertama import packages yang diperlukan untuk melakukan pengolahan"
      ],
      "metadata": {
        "id": "AELkzqZ0epwK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "eNt7HHmaegMj"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "```\n",
        "# This is formatted as code\n",
        "```\n",
        "\n",
        "##  Natural language processing"
      ],
      "metadata": {
        "id": "ccvXXn75gQKH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Tindakan pertama kami adalah memuat data dari file CSV ke dalam Panda\n",
        "Bingkai Data. Kami melakukan ini dengan fungsi read_csv."
      ],
      "metadata": {
        "id": "2MozSTfzeq7v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv( 'student-mat.csv' , sep = ';' )\n",
        "print(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DV9u9k8Lej2h",
        "outputId": "6a62b67d-fe4b-4bde-cf65-2c3929f927d8"
      },
      "execution_count": 204,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    school sex  age address famsize Pstatus  ...  Walc  health absences  G1  G2  G3\n",
            "0       GP   F   18       U     GT3       A  ...     1       3        6   5   6   6\n",
            "1       GP   F   17       U     GT3       T  ...     1       3        4   5   5   6\n",
            "2       GP   F   15       U     LE3       T  ...     3       3       10   7   8  10\n",
            "3       GP   F   15       U     GT3       T  ...     1       5        2  15  14  15\n",
            "4       GP   F   16       U     GT3       T  ...     2       5        4   6  10  10\n",
            "..     ...  ..  ...     ...     ...     ...  ...   ...     ...      ...  ..  ..  ..\n",
            "390     MS   M   20       U     LE3       A  ...     5       4       11   9   9   9\n",
            "391     MS   M   17       U     LE3       T  ...     4       2        3  14  16  16\n",
            "392     MS   M   21       R     GT3       T  ...     3       3        3  10   8   7\n",
            "393     MS   M   18       R     LE3       T  ...     4       5        0  11  12  10\n",
            "394     MS   M   19       U     LE3       T  ...     3       5        5   8   9   9\n",
            "\n",
            "[395 rows x 33 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = data[[ 'age' , 'sex' , 'studytime', 'G1' , 'G2' , 'G3' ]]\n",
        "\n",
        "data.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "h8wEK2MRelZq",
        "outputId": "13989772-a948-4f77-c4ab-f11634dc5213"
      },
      "execution_count": 205,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>studytime</th>\n",
              "      <th>G1</th>\n",
              "      <th>G2</th>\n",
              "      <th>G3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>18</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>17</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15</td>\n",
              "      <td>F</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>16</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   age sex  studytime  G1  G2  G3\n",
              "0   18   F          2   5   6   6\n",
              "1   17   F          2   5   5   6\n",
              "2   15   F          2   7   8  10\n",
              "3   15   F          3  15  14  15\n",
              "4   16   F          2   6  10  10"
            ]
          },
          "metadata": {},
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Fitur seks tidak numerik, tetapi disimpan sebagai kategori/faktor (untuk wanita) atau M (untuk pria), untuk dapat bekerja dan mendaftarkannya dalam sistem koordinat maka harus mengubahnya menjadi angka."
      ],
      "metadata": {
        "id": "s5N_k6qifLId"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data[ 'sex' ] = data[ 'sex' ].map({ 'F' : 0 , 'M' : 1 })\n",
        "\n",
        "data.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "N_4UJIjCfB_x",
        "outputId": "e8c1628a-1f7d-4d91-fe2b-aa35d5e4a163"
      },
      "execution_count": 206,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>studytime</th>\n",
              "      <th>G1</th>\n",
              "      <th>G2</th>\n",
              "      <th>G3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>18</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>18</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>14</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   age  sex  studytime  G1  G2  G3\n",
              "0   18    0          2   5   6   6\n",
              "1   17    0          2   5   5   6\n",
              "2   15    0          2   7   8  10\n",
              "3   15    0          3  15  14  15\n",
              "4   16    0          2   6  10  10\n",
              "5   16    1          2  15  15  15\n",
              "6   16    1          2  12  12  11\n",
              "7   17    0          2   6   5   6\n",
              "8   15    1          2  16  18  19\n",
              "9   15    1          2  14  15  15"
            ]
          },
          "metadata": {},
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Mengubah G3 menjadi labels"
      ],
      "metadata": {
        "id": "_amI_E6S2CGx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "prediction = 'G3'"
      ],
      "metadata": {
        "id": "dp_-3LwGhMJv"
      },
      "execution_count": 207,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "membuat garis X dan Y"
      ],
      "metadata": {
        "id": "7BKiiTbl2LLS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "pada variable X, data label dibuang (karena akan dicari atau dipredik)"
      ],
      "metadata": {
        "id": "3DxwPLPH2Ot2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = np.array(data.drop([prediction],1))\n",
        "Y = np.array(data[prediction])"
      ],
      "metadata": {
        "id": "9cP-68UkhUai"
      },
      "execution_count": 208,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Data X\")\n",
        "print(X)\n",
        "\n",
        "print(\"\")\n",
        "print(\"Data Y\")\n",
        "print(Y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K0d7MVpUhvnC",
        "outputId": "14f806f1-d886-423d-cde1-9ceab0f28521"
      },
      "execution_count": 213,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data X\n",
            "[[18  0  2  5  6]\n",
            " [17  0  2  5  5]\n",
            " [15  0  2  7  8]\n",
            " ...\n",
            " [21  1  1 10  8]\n",
            " [18  1  1 11 12]\n",
            " [19  1  1  8  9]]\n",
            "\n",
            "Data Y\n",
            "[ 6  6 10 15 10 15 11  6 19 15  9 12 14 11 16 14 14 10  5 10 15 15 16 12\n",
            "  8  8 11 15 11 11 12 17 16 12 15  6 18 15 11 13 11 12 18 11  9  6 11 20\n",
            " 14  7 13 13 10 11 13 10 15 15  9 16 11 11  9  9 10 15 12  6  8 16 15 10\n",
            "  5 14 11 10 10 11 10  5 12 11  6 15 10  8  6 14 10  7  8 18  6 10 14 10\n",
            " 15 10 14  8  5 17 14  6 18 11  8 18 13 16 19 10 13 19  9 16 14 13  8 13\n",
            " 15 15 13 13  8 12 11  9  0 18  0  0 12 11  0  0  0  0 12 15  0  9 11 13\n",
            "  0 11  0 11  0 10  0 14 10  0 12  8 13 10 15 12  0  7  0 10  7 12 10 16\n",
            "  0 14  0 16 10  0  9  9 11  6  9 11  8 12 17  8 12 11 11 15  9 10 13  9\n",
            "  8 10 14 15 16 10 18 10 16 10 10  6 11  9  7 13 10  7  8 13 14  8 10 15\n",
            "  4  8  8 10  6  0 17 13 14  7 15 12  9 12 14 11  9 13  6 10 13 12 11  0\n",
            " 12 12  0 12  0 18 13  8  5 15  8 10  8  8 12  8 13 11 14  0 18  8 12  9\n",
            "  0 17 10 11 10  0  9 14 11 14 10 12  9  9  8 10  8 10 12 10 11 11 19 12\n",
            " 14 15 11 15 13 18 14 11  0  8 14 16 11 10 14 18 13 12 18  8 12 10  0 13\n",
            " 11 11 13 11  0  9 10 11 13  9 11 15 15 11 16 10  9 14  8 14  0  0  0 15\n",
            " 13  0 17 10 11  0 15  0 10 14 16  9 15 13  8 13  8  8 11  9 13 11 10 16\n",
            " 13 12 10 15 12 10 13  0 10 11  9 12 11  5 19 10 15 10 15 10 14  7 10  0\n",
            "  5 10  6  0  8  0  9 16  7 10  9]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pembagian data train dan data test. Persentase data yang akan digunakan latihan adalah 90%, sedangkan untuk pengujian adalah 10%.\n",
        "\n",
        "Dalam hal ini kenapa testing menggunakan 10%, karena itu merupakan nilai yang baik dan direkomendasikan dalam beberapa ML. Sehingga ML dapat berlatih lebih dalam membaca parameter pada data dengan tingkat rasio data latih yg lebih besar"
      ],
      "metadata": {
        "id": "u2be3XZj2p3C"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, Y_train, Y_test = train_test_split(X,\n",
        "Y, test_size = 0.1 )"
      ],
      "metadata": {
        "id": "--2ZC0mihX5Y"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Model ML yang digunakan adalah Linear Regresi"
      ],
      "metadata": {
        "id": "84gD_hxx4JQ1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = LinearRegression()\n"
      ],
      "metadata": {
        "id": "a2kYSQQdhX2h"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Pengimplementasian Algoritma pada data train dan data test"
      ],
      "metadata": {
        "id": "zVpJ0DJS4Srq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train, Y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-kY9oXWbheMc",
        "outputId": "4b6e469a-6a31-4afc-959c-abe882b370d9"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Keakuratan ML dalam memahami parameter data"
      ],
      "metadata": {
        "id": "2CukvBl24av1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "accuracy = model.score(X_test, Y_test)\n",
        "print (accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8l_dlT-WjQye",
        "outputId": "ef183b85-19a9-4dfc-ffc5-d1522e0b3d10"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8649209083065557\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Memprediksi data baru dengan data sebagai berikut\n",
        "\n",
        "\n",
        "*   Data 1\n",
        "\n",
        "1.   Umur : 18\n",
        "2.   Kelamin : 1 (Male)\n",
        "3. Waktu Belajar : 3 jam\n",
        "4. Nilai G1 : 15\n",
        "5. Nilai G2 : 16\n",
        "\n",
        "\n",
        "*   Data 2\n",
        "\n",
        "\n",
        "1.   Umur : 18\n",
        "2.   Kelamin : 0 (Female)\n",
        "3. Waktu Belajar : 0 jam\n",
        "4. Nilai G1 : 5\n",
        "5. Nilai G2 : 8"
      ],
      "metadata": {
        "id": "53qRSBh7lIyE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_new = np.array([[ 18 , 1 , 3 , 15 , 16 ],[19, 0, 0, 5, 8]])\n",
        "Y_new = model.predict(X_new)\n",
        "print (Y_new)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JNETlMbnjiJv",
        "outputId": "dc0f08ed-366a-4cc7-8f42-ec72eec0bbd6"
      },
      "execution_count": 215,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[16.03816945  6.58516425]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Yak, ternyata yang pria lebih pinter ya ges"
      ],
      "metadata": {
        "id": "k2-ziF0q5np1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Silakan berkreasi sendiri "
      ],
      "metadata": {
        "id": "34DCh6fS5s5i"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "```\n",
        "# This is formatted as code\n",
        "```\n",
        "\n",
        "##  Visualisasi Data Linear Regresi"
      ],
      "metadata": {
        "id": "cjdxCzain4ZL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data G3 tidak terlihat jelas / tidak korelasi dengan menggunakan paramater X (Waktu Belajar)"
      ],
      "metadata": {
        "id": "WTuPGGABn-pZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(data[ 'studytime' ], data[ 'G3' ])\n",
        "plt.title( \"Correlation\" )\n",
        "plt.xlabel( \"Study Time\" )\n",
        "plt.ylabel( \"Final Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "HTgj9V0EjoLS",
        "outputId": "b9ce6561-f2e2-4a23-9346-c83a8a13f7df"
      },
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data G3 cukup terlihat jelas atau berkorelasi dengan menggunakan paramater X (G1)"
      ],
      "metadata": {
        "id": "grkJq3geoc5n"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(data[ 'G1' ], data[ 'G3' ])\n",
        "plt.title( \"Correlation\" )\n",
        "plt.xlabel( \"First Grade\" )\n",
        "plt.ylabel( \"Final Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "PQx_nCQbnalb",
        "outputId": "724bf21e-4dd0-49ab-c730-43707a467598"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data G3 cukup terlihat jelas atau berkorelasi dengan menggunakan paramater X (G2)\n",
        "*c = y (untuk menampilkan perubahan warna pada data)"
      ],
      "metadata": {
        "id": "NI5n-ck2o-r6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(data[ 'G2' ], data[ 'G3' ], c = y)\n",
        "plt.title( \"Correlation\" )\n",
        "plt.xlabel( \"Second Grade\" )\n",
        "plt.ylabel( \"Final Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "DQyg7iiEj89I",
        "outputId": "6c96ad9e-d8fe-48a2-dc48-1879fc9bb88f"
      },
      "execution_count": 185,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Paramater Garis X dan Y adalah garis G1 dan G2, titik pada data adalah G3\n",
        "\n"
      ],
      "metadata": {
        "id": "V0n0sY7npLpK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(data[ 'G1' ], data[ 'G2' ], c = y)\n",
        "plt.title( \"Correlation\" )\n",
        "plt.xlabel( \"First Grade\" )\n",
        "plt.ylabel( \"Second Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "vEUK1FBUpHY7",
        "outputId": "1e7b7308-988a-4a97-d468-9dbf89e753e9"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Linear Regresi pada G1 dan G3\n",
        "\n",
        "*Note 'o' untuk menampilkan point pada data"
      ],
      "metadata": {
        "id": "dkoqMzANwNqK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.array(data['G1'])\n",
        "y = np.array(data['G3'])\n",
        "plt.plot(x, y, 'o')\n",
        "m, b = np.polyfit(x, y, 1)\n",
        "plt.plot(x, m*x + b)\n",
        "plt.title( \"Linear Regresi\" )\n",
        "plt.xlabel( \"First Grade\" )\n",
        "plt.ylabel( \"Final Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "TMWzO-LAqt8A",
        "outputId": "600d4095-4a55-4e7f-b900-d148e0116281"
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.array(data['G2'])\n",
        "y = np.array(data['G3'])\n",
        "plt.scatter(x, y, c = y)\n",
        "m, b = np.polyfit(x, y, 1)\n",
        "plt.plot(x, m*x + b)\n",
        "plt.title( \"Linear Regresi\" )\n",
        "plt.xlabel( \"Second Grade\" )\n",
        "plt.ylabel( \"Final Grade\" )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "gWRD_eEDrRt6",
        "outputId": "88d20a59-1708-47b4-e598-77b58c4a2910"
      },
      "execution_count": 189,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX4AAAEWCAYAAABhffzLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd3hTZfvA8e/dpumEQqGUvZcs2RtEmYID3PNV8XW8jp/6qoib14kD98K9FRWcyFJRwAEiW2RTZimUQnebJnl+fyRNV9KkdLf357p6kfOcc+c8Demdk+c8Q4wxKKWUqjuCqroCSimlKpcmfqWUqmM08SulVB2jiV8ppeoYTfxKKVXHaOJXSqk6RhO/qlFEZISIbK3qetQU+nopbzTxq2pJROJFZEzRcmPMcmNMl6qoU1EiMkNEckUkXUSOi8hvIjKkqutVUHV6vVT1oYlfqQCIiMXHrjnGmCigMbAU+LwCzi0ion+rqtzom0nVKCIySkT2F9iOF5E7RGSDiKSIyBwRCSuw/wwRWVfgirxXgX3TRWSniKSJyGYRmVJg35Ui8quIPCsiR4EZJdXLGGMHPgJaiEis+zmiReQtEUkQkQMi8oiIBLv3BYvILBFJEpHdInKTiJi8DxgR+VlEHhWRX4FMoL2IdBWRJSKSLCJbReSCAvWd6P4d0tznusPb66UUaOJXtcMFwASgHdALuBJARPoAbwPXAY2A2cA3IhLqjtsJjACigf8BH4pIswLPOwjYBcQBj5ZUARGxAv8CjgLH3MXvAnagI9AHGAf8273vGuB0oDfQF5js5WkvB64F6gFHgCXAx0AT4CLgFRHp5j72LeA6Y0w9oAfwU0n1VXWbJn5VG7xgjDlojEkGvsWVTMGVNGcbY1YaYxzGmPeAHGAwgDHmc3ec0xgzB9gODCzwvAeNMS8aY+zGmCwf575ARI4DWbiS+XnGGLuIxAETgVuNMRnGmMPAs7gSNrg+rJ43xuw3xhwDZnp57neNMX+7v01MAOKNMe+467MWmAuc7z42F+gmIvWNMceMMWtK9QqqOkUTv6oNDhV4nAlEuR+3AW53N/McdyfoVkBzABH5V4FmoOO4rpQbF3iufQGc+zNjTANc3wo2Af0KnDsESCjw/LNxXa3jrkPB5/d2roJlbYBBRX6XS4Gm7v3n4vqg2SMiv1S3m8yqevF1w0qp2mAf8KgxplgzjYi0Ad4ARgO/G2McIrIOkAKHBTx1rTEmSUSuBVaLyMfuc+cAjd1X7EUlAC0LbLfy9rRFfpdfjDFjfZz/T+BsEQkBbgI+8/GcSukVv6rWQkQkrMBPaS9U3gCuF5FB7p4xkSIySUTqAZG4EusRABG5CtcV/wkzxmwFFgHTjDEJwGJglojUF5EgEekgIqe4D/8MuEVEWohIA+AuP0//HdBZRC4XkRD3zwAROUlErCJyqYhEG2NygVTAWZbfRdVumvhVdfY9rrbzvJ8ZpQk2xqzG1e7+Eq4brjtw3/g1xmwGZgG/A4lAT+DXcqjzU8C1ItIE181eK7DZff4vgLybx2/g+mDYAKzF9bvaAYeP3yUN183hi4CDuJq3ngDyblRfDsSLSCpwPa5mIKW8El2IRamqJyKnA68ZY9pUdV1U7adX/EpVAREJd/e9t4hIC+BB4MuqrpeqG/SKX6kqICIRwC9AV1zNWPOBW4wxqVVaMVUnaOJXSqk6Rpt6lFKqjqkR/fgbN25s2rZtW9XVUEqpGuWvv/5KMsbEFi2vEYm/bdu2rF69uqqroZRSNYqI7PFWrk09SilVx2jiV0qpOkYTv1JK1TGa+JVSqo7RxK+UUtWQcRzB2P7EOA75P7iUKqxXj4i0At7HNU+5AV43xjwvIjHAHKAtEA9c4F6IQiml6jxj7JjU+yHrW5BQMDZM6KlIg6dxLfRWdhV5xW8HbjfGdMO14tGN7mXipgM/GmM6AT+6t5VSSgEmYzZkzQdsYNKAHMhZikl7qtzOUWGJ3xiTkLf8m3tK2X+AFsDZwHvuw97D+1qjSilVN2V8AGQXKcyBzM8oryl2KqWNX0Ta4lpseiUQ516kAlxzisf5iLlWRFaLyOojR45URjWVUqrqmXQfO7LxsVxDqVV44heRKFyLQt9adOZB4/r48voRZox53RjT3xjTPza22IhjpZSqnax9vJdbulL6Rei8q9DE717/cy7wkTFmnrs4UUSaufc3Aw5XZB2UUqomkXr3gkSQ3/cmGAhH6j9YbueosMQvIgK8BfxjjHmmwK5vgCvcj68Avq6oOiilVE0jIV2RRt+QE3IBH2w8HxM2GWk8D7H2LbdzVOQkbcNwrQO6UUTWucvuAWYCn4nI1cAe4IIKrINSStU4n68Vps0dAEC7NgMZ2aB8m7srLPEbY1YA4mP36Io6r1JKVRcOh43g4MD73idn2Oj78BLP9sQecYzsXP73OGvEtMxKKVWTHEw8F1vub55tq2UAzZt+U2LM49//w+xluzzbn/zrHprVP0z8/iAiwqfQpNFL5VY/TfxKKVWOEhIvKJT0AWz2PzmYeDbN44rf0txxOJ0xz/zi2b5++H4u6j2jwBFOMrPmcviooUmjl8uljpr4lVKqHOXkLvdabstdVWjbGMO/3l7F8u1JnrINM8aRnNTea3xm1peAJn6llKpRHA4HwcHB/LojiUvfXOkpf/HiPpx5cnMAkrH7iDY4nZkEBUWUuR6a+JVSqpLkOmHQ4z+QlJ4DQMcmUSy4ZQQhwQV71ocAuV6ig8ol6bueSSmlVLkJtXrvtLhoy1V0vX+hJ+nPu2EoP/z3lCJJH6LrXe81PjK8/Hq+6xW/UkqVo2ZNPiTh8OXk2H4A4HhWFJPfes6z/+zezXnuwt64xrgW1zD6HgyG1LTZuK78g4mKuIzGMTPLrY5SXrO9VaT+/fub1atXV3U1lFKqVB7+bjNvrdjt2V4+7VRaxZRPc00gROQvY0z/ouV6xa+UUuVse2IaY59d5tm+Y1xnbjqtUxXWqDBN/EqpWifdtpX447PJyN1OPWs32kRfS6S1Q8DxhzN+YHvyY9gcRwgNbkKnmHuJjTzNb5wxhkvfXMlvO496yl6eejcxEa2B707kV6kQ2tSjlKpVjmevZl3iv3GaHMAJBBEsYfRp+j71Q3v6jT+QOoetyQ8UK+/a6FGa1zvPZ9zy7Ue4/K38vvr/GfseAzqs92xbpBEj2/zmLbTCaFOPUqpO2Hr0fzhNVoESJw6Tyfbkx+jX7BO/8duTH/Navi35Ea+JPzvXwZDHf+RYpqsLZsuYgzx43jMEBzkLHWc3R4vFVhVN/EqpWsMYBxm5273uS83Z6Dfe6XTiLLbsoXtfoQ8Tlw//2MN9X23ybH914zCSHYN8Pn9WVhbh4eF+61HRNPErpWqRIIIlHIfJLLbHElTPf3RQSUOb8rtfHknLYcCjP3i2p/RpwbMX9gbgp3jfz1Adkj5o4ldK1SIiQot6l7A/7UOcJv/KPUjCaFX/ihIi89UP7Utqzppi5dGhrqbyGd/8zbu/xXvKf51+Gi0aVI+EHigduauUqlXaN7yVJhGnE4SVYIkiiFCaRU6hTfQ1AcX3jnuHcEubQmURlvaE8xxtp8/3JP27JnQlfuakYkl/SNxPXp93UNyC0v8yFUR79SilaiWbI5ls+37CLa0JCW5Q6vgM2y5SctZSP6Qv/37/EH/sSgYgSGDDjPFEhZbcYLIj6TkOZc4jLvwMOsVOO6Hfoay0V49Sqk6xBsdgDY454fhIa3v+3B3Fle/86Sl77bK+TOjRLKD4jo1vpSO3nvD5K5ImfqVUtZPrzGJ32k8ct+2lUWgn2kaNJDgo8CUMs+3HWZU0m2M5O2kc1pV+ja4hzOL/5m6epIxERjz5O1k5IQCc1CyCb286BUtw7Wgd18SvlKpW0nIP8vXe67E7s7GbLCwSzp9Jr3N269mEWxr6jU/M2sS3+24AXM3YR3L+YUvK10xu/RaNwjr6jX9+6VKeXZSJa3pkmHrWuzRvfIiDWU/TOsp3V82apHZ8fCmlao3lh54kx5GC3d1v3m6yyLQfZuWRwFafWnxgOnlJP4/ByeIDd5UYdzgtm7bT57uTPvTquJH7ps6keeNDAPxw8J5S/ibVl17xK6WqDaexk5C1FkPhUa9OHOxJ976kYaHjnHZynCle92U4DvuMe+DrTbz/+x7P9s0XvEx0VFqROtj8nr+m0MSvlKpmvM9Tj4/568vin4RUTn8+/wNl+oQuWJpfVe7nqW408Sulqo0gsdAychD7M1ZicOSXY6FDPe8rWxWKD7IQEdyITEfxeXHqW1p6Hjudhgtf/50/448BEBIsrHtgHJGhFt7ZFoqDnGLxwRJ2Ir9StaRt/EqpamVE3J1EWpoQIhEEYcEi4TSwtmFg4/8EFH96y2cRgguVBRHChJazAFi65TDt7/nek/RnX96P7Y9OJNLdL39iq+fwZlLL50/0V6p2dACXUqracRo7+zL+IMW2n5jQ9rSI6I9I4NepdmcO65M/ICl7O03Cu3Nyw0vIsQv9H1lChs31TaJXy2i+vGEYwUHFm5BsjixWJD7B0ZwdNA7txLC4aViDa9a0DOB7AJcmfqVUrffur7uZ8e1mz/Z3Nw+nR4voKqxR5dCRu0qpGmX2jntJyNpF+8iT+Vf76aWO/zR+FpuO7ODDuWd4yi7s34onzutVntWskTTxK6Wqlb+T/+Dj/U96tremr+LeDedwQ6dZtAhv5zc+PnUzb8Tfx6pVQ9m+Iz/pf3vbSfSMa18hda5pNPErpaqVgkm/oFe2386jveb5jX9i7TMsWHC1Z7tv3z84qevffJoIPeP8x9cFmviVUtVGclbSCcc6nYZzXvmVdfunABAcbOe8cz/CYrGXV/VqDU38SqlqIyXX9+jakvywOZF/v5/fAeSUkYtp2XJfeVWr1tHEr5SqNtrV71aq4zNtdvo8tIQcu2uKhz6tG9B16DMEBVX/3opVSQdwKaWqlXo+5tBvEdap0PZbK3bT7YFFnqQ///+G8+UNw2gZ4f0GboeI3uVb0RpME79SqlqZ3v1N2kX0LFTWq/4wbuj8BACHUlyzaD78natf/sUDWxM/cxLdm7v65d/Y+Sl6R48qFD84ZiJTOz5Q8ZWvIXQAl1Kqxpg+dwOf/pnfdr/yntHE1a89c+iUNx3ApZQqFadxkuvMxRpkRU5gZsx0Wzr7sw7QPrwdVmvgq2fl2ZK4jcXHlnBhw/M4Yg/jjBdXePY9eGY3rhpWcp9+h8NBsi2ZGGsMwcHBJR5b11RY4heRt4EzgMPGmB7ushnANcAR92H3GGO+r6g6KKVKz2mcfHfwe74/tJAcRw71Q+pxYavzGdp4SEDxNpuN69bdiLPAnPqhEsrrA14JKD4xMZFpe1yLnhgDb3wVTdpx18pbkdZgVt83lnCr70TucDi4/+//cSD7gKesfUQ7HuxxX0Dnrwsqso3/XWCCl/JnjTG93T+a9JWqZr49OJ9vE+aT5cjCiZPjuSm8E/8+a46tCyi+aNIHyDE53LzmtoDi85J+0sFmLPvyHE/S7zH0V/5+aEKJSR9gxuaHCyV9gF2Zu3lss/eBYXVRhV3xG2OWiUjbinp+pVT5cxgH3ycsxOYsvNqUzWlj3v4v6duw5J4x6bb0Ykk/T6o91e/5ExMTcdiD+fXbMzHGdV1av1ESvUcuC3gdlr1Z3vvvb03fGtgT1AFV0cZ/k4j8C1gN3G6MOebtIBG5FrgWoHXr1pVYPaXqrixHFnbjfaRrkq344iZF7crYVabzP/jbClasPNuz3W/0D0RF+//AyGNz1J7lEStSZXfnfBXoAPQGEoBZvg40xrxujOlvjOkfGxtbWfVTqk6LCI4gLCjU674W4c39xneN7HpC501IyaLt9PksXOnqodO8/U5OOWdeqZI+gDW49DeR66JKTfzGmERjjMMY4wTeAAZW5vmVUiULkiDObXUO1qDCCdQaZOX8luf6jbdarVjFe/JtFtbMa/kdn69nyOM/ebaHTJxPp97rS1HrwrrX8z76d1CMpps8lZr4RaTg//wUYFNlnl8p5d9pTUYxte0VxIXGYQ2y0i6yLf/tfAtd63cJKP6NAa8SFRxVqKxZaBwzez1SqGzj/hTaTp/PF3/tB+Chs7sTP3MSn4z03vvnvYFvBXT+aSfdTr+GfQuVDW00hBs6XhdQfF1QYQO4ROQTYBTQGEgEHnRv9wYMEA9cZ4xJ8PdcOoBLqdrD4TSc+eIKNie4mnHqh1lYec8Yv711VOlV+gAuY8zFXooD+8hWStVKCzcd4voP//Jsv3vVAEZ1aVKFNaqbdOSuUrXQl/uX8UH8IjLt2TQObcCtnc+jf6OTAo6fvPxuMhzZnu024XG8OSjw5Q8n/Hw7jgLdOiNMJBsWDyGvgWFQuxg+uWYwQV4WOgf4J3UPH8UvZl9mIh3qteTyNuNpF+X9HoEqPZ2rR6la5rXtXzH3wC/Fymf0mMqwxj29RBQ27ufb8JYV4kJj+HDI/X7jx/5ceKBW8q42HN2WP7PmoltH0qVpPZ/xfyZv4X+b3ibHmQuAIFiDQpjV+0a61Neu3aXhq6lHZ+dUqhaxO+3MO7DM677ntn7mNz4zM9Nr0gdIzEn2G5+amt/9MjcrlO0Lx3iSfnTrvcTPnFRi0gd4aftcT9IHMBhynDZe2/m13/OrwGhTj1K1yP7MIxgfqft4brrf+DkHl5bp/PMOLwfg0IbupB3Mb5ppd+oyLKH+B1fZnHYOZXkfKLYtbW+Z6qby6RW/UrVI49Bon/ss4r/XzIAGgd8H8KZBblu2LxzjSfqx3f6h04QfAkr6rjoGYQ0K8bqvfkhkmeqm8ukVv1K1SFRIBK3CY9mXdaTYvnFxA/zG92jsffUqf+wOJ2e8uIIth9IACA6x0XbUCoKCvc/b40uQBHFWi+F8fWB5oeae0KAQLmh12gnVTRWnV/xK1TIv9vsvTcMKL1/Yp0Enbul8fkDxz/a42Wv51wMf9Vr+/cYEOt67wJP07z83jvajlxVL+nP7/i+g809tN5Excf2xBlmICA4lNCiEKS1GMrnFiIDilX/aq0epWupA5hHiMw/RvX47Glij/AcU8c6O+fxyZC0XtxnL+OaDiu1Py86l54zFnu1hHRvxwdRBni6as/7+hGVH13N+y1O5rP34Up8/PTeLIznHaRoWQ7jF+/xBqmS+evVo4ldKldrLS3fw1KL8aY6X3DaSTnEl99ZRlU+XXlSqBjlmy+Db/WvZl5FM74atGdusB9bgwP9c39z2My9t/xEAC0HMHnQl/RqXvFRhQVcse431afmLmUxtPYz/6zmB/ccyGf5Efs+fq4e34/4zik+KtiXlIA+sm0dCdgod6sXxeJ/zaBbeIODzq4qlV/xKVTNbUg5y9R9vY3c6yHHaCQ+2EhtWjw+HXUf9kHC/8Rcte4UtacWnwLqp02j+3XmU3/h+8x/AUaRLqDEQvKM7yYfyr+pX3zeGxlHFm2A+37OKRzd9W6z8jUFTGVCKDx9VdjqAS6ka4p51c8mw55DjdC2IkuWwkZB5nNnbAutj7y3pA55vAP4UTfr21ChSVgz2JP3Hz+lJ/MxJXpM+wOObvvNafsvqDwM6v6p4mviVqkaSc9LZl1l8AFOucbA4wf8s5u/tWF6m809b9annsTGQ+lcv0tf3AEBCbGx5eAIXD/Q9bUJiVgpOHwPIMnV1rGpD2/iVqkaCJQhfcyaEBPkfgNXAWrZBTo3DXL1/bEcakbklf36dyB6bCWmYSljIlBLjA6mjqnp6xa9UNRJtjaBHg5YEFVlZPDTIwpRW/fzGn926r99jSnJ95/EcXz7Yk/QtDY4TPfwPQhoGtgRiTGgUIT5GCMdYI8pUN1V+NPErVc081uc84kLrExFsJTTIQlhwCH1i2nBlh+EBxZ/T0vsHxFuDppYY98KP2+lVoF9+vX7riOq5hbzPoKmthwV0/lcGXlGsLAjho+H/CSheVTzt1aNUNWR3Ovg9aScJWcfpFt2cHg1alir+UPZxzvv5JTIdNpqHN+CLoTcQFhbm9dh9yZmMeDL/xvG1I9szflAwV//xgafsx8G30qhRo4DPb3Pk8tim79iaeoiBjdvzf53HEByszUCVTQdwKaUKMcZw08drmb8xvxfQX/eNoZGP3jqq5tEBXEpVIqfTyZfxG9melsTY5p3pF9uqVPE2m42rfv2MnalHOKNld+7rN65U8ceOHWPQ4ldxYGgQEspf59xRaP9fe5I599XfPdtPntuLCwYUruOVP3/MlpRERjfvwqMDJpbq/Kp60yt+pcrZtpQjTF78FjlOh6esbVQMi06/DkuQ/9tqn+5Yw71/LShW/ufkW4gJ9T/nzr9+/IBfk4rPXf/+0IsZ2Lwt459dxq6kDADi6oeybNqphFrym2G+3bORW//4plj8r5NuoWlU6ef8UVWnTAO4RKSNiIxxPw4XEZ2UQykfLvrx/UJJHyA+PZnb/whsBSlvSR9g6NcvBhTvLekDXPbdAjrdu8CT9D++ZhAr7xlTKOkDXpM+wMj5LwR0flX9+W3qEZFrgGuBGKAD0BJ4DRhdsVVTqubZnXaUlNxsr/sW7d/qtbygxfu2+NyXa/zPbf/gqu+LlRl7MM6N+WvtntollrevHIBI8YXO/0k+5PO5i47oVTVXIG38NwIDgZUAxpjtItKkQmulVA11PCfL5z5HAIl7V5r3ZQcDtfl4YqFtZ0JTzKGmnu0fbz+FDrG+m2v2ZRwv0/lVzRBIU0+OMcYz1lpELPgcW6hU3XZyTPNig6/ydIxu7Dd+akf/q2SV5PUBkwEwOVYca3t7kr7EJRLcZ12JSR9gXKuuZTq/qhkCSfy/iMg9QLiIjAU+B4pPvaeUIigoiGm9ii8RGITw/JCSpzsAsFqtdI2O9brvzp6j/MY3aNAAx662ODfnT5Uc1HMjQc0TaBVW3288QJ+Y5l7Lr+86NKB4Vf357dUjIkHA1cA4QIBFwJumErsDaa8eVdP8emg3M9f/SGJWGr1jWjCj33iaR/peCL2oB1Yv4KOdawCwIDw3eDKntyk+731Bf8Ync/5r+V00pfVegholAzAqrh1vjbok4PM/vuYH3ty+EoBghEf7n875HfoEHK+qBx3ApVQtZbM7GfPML+xNzgSgRYNwlt4xCqtFZ2Sp60rdnVNENorIBl8/FVtdpcouzZbNzuNHcTr931T1JsdhJzk7E+cJXhz9dmA3ty/9jsMZGScU//Hfaxn/+ZtsO+r7hu+Xa/fT+b4FnqT/6bWD+XX6aVgtQfy0ZzvXLPqCg2lpJ3T+XKeDo1mZOE7w9VPVl88rfhFp4354o/vfvIk7LgOMMWZ6BdfNQ6/4VWmk2bKZ8u1HbD/uSphBCFd378t9gwPrgWxzOHh45U98tm0jTmOIDg3jgUGncVaHkwKKX3t4P5O//bhY+Z6rpwUU/9P2bVy17KsS449n2uj90BLP9piT4njjX/0QEbYmHWTc18UXPQn0/A6nk6f/Ws67m9fgME4iLCFM638Kl3Q9OaB4VX2ccFOPiKw1xvQpUrbGGFO2+V9LQRO/Ko0Rn81mb1pKsfIZg0dzVXf/UxvftWIhX+3YTLbD7ikLC7bw9rhzGda8TQmRLm3eetJreYgEsWPqHV73BRIPruQ9a/FWXvxph6ds6R2jaNc4fx5+f/H+PLV6GW/9vZose/7vH26xMGvkJCa16+I3XlUfZRm5KyIyrMDG0ADjlKp0+1KPe036AM+t/dVvfJothy93/F0o6QNkO+y8sPY3v/EfbV7jc18gA7CeXFnC8oo2K22nz/ck/ZtO7Uj8zEmFkv5Pe7b7PUdJ7E4nb//9V6GkD5Blt/PcGv+vn6oZAhnAdTXwtohE4+rVcwwoeWJvparIlmNHfO5Ls+X4jT+SleFaBQtHsX2+PlAK+nRr2W5/fbZ9Y/FCAyS0QjLyu2Oue2AsDSKsxQ59u4QPnkCk5+Zg99Gmn5BxYvcKVPXj98rdGPOXMeZk4GSglzGmtzGmbO8upSpIv7gWPvc1jfA/xVSLKO993YMQTo5t6nVfQXcPPMXvMSV5ctCEwgVZEciO7p6k/8wFJxM/c5LXpA9w/4ARZTp/fWsY9azep2U+Kcb7+AJV8wQ6Sdsk4DrgFhF5QEQeqNhqKXViYsIiGO6jHf6RoWP9xocGW7ilzzDCLSGFyy0WbuvjfwWqoS3a+dzXJMz/0oOndersemAEdndC9ruez4TYoONmzulb8oIsXRp7H3wFEBbAerhBItw94BTCLYUbA8KDLUwfULYPNVV9+E38IvIacCFwM66mnvMB/3e4lKoiH4w/n4s79yIkKAgBYsLCee20szmtdYeA4q/vNZCZw8fTsUEjoq1hnNKiHfPOuJQuAV7x7rl6GkUnbWgUGs6fl94UUPys3pcgO7ohdtdVvWm5G9puJ/7fdwZ8/qLCgoLZetXtAcWf37knL4w6k24xsURbwxjctBUfT7yoxG9TqmYJpFfPBmNMrwL/RgELjDFl+05ZCtqrR9UFxzJs9Hk4v4vm+O5xvHZZP6+zaCoViLKswJU3x2ymiDQHjgLNyrNyStV1Ty7cwis/7/Rs/3LnKNo0iiwhQqkTF0ji/1ZEGgBPAWtw9TF4w1+QiLwNnAEcNsb0cJfFAHOAtkA8cIEx5tgJ1VypEkyZ8xHrE11zyweJcPuQofyn/+CA49u/MKvQdoTFwqYbbjnheIBd/1e8qWXXkXROm/WLZ/v/Rnfiv2M7c/JrL5Jm80yKS5+4psy98NKAz798TzwvrPqdfakpnBzXlNsGD6NrY705q1xKbOpxT9A22Bjzm3s7FAgzxvjt1yYiI4F04P0Cif9JINkYM1NEpgMNjTF3+XsubepRpTHozVc5kplZrPzuYSO5pp//aY+9JW2ASIuFjQEkf1/xkJ/8jTFMffdPlm7N7366/oFxREeE0OmFWV46k8LJcXF8eeFlfs//1ZbN3PPTErLdffEFCLNY+Pz8i+kWq0tp1CUnNIDLGOMEXi6wnRNI0ncfuwxILlJ8NvCe+/F7wORAnkupQO0/ftxr0gd48rflfuO/+nuTz30ZRQY1efPWyt/9HvP7zqO0u/t7T9J//qLexM+cRHRECIeOH/ea9AHWJyb62JPPaQyPLncbS3QAACAASURBVP/Zk/TB9RU9227nqQB+f1U3BNLU86OInAvMK4epmOOMMQnux4eAuDI+n1KFfLrZd+J2BPD2feCXH8t0/pkrfY/uNUYY/NiPHEp13TZr1ziSxbeNJCQ4//rrmVV/lOn8R7MySS/QROQ5N7DukO9lFVXdEkg//utwLb6SIyKpIpImIqllPbH7Q8TnX6KIXCsiq0Vk9ZEjvkdjKlXQoBYl93P3Z3AZ43vFer+WMZnRmIQunqT/xfVDWHrHqEJJH2Bix05lOn99ayhSrDOpS1yU3ixWLoGM3K1njAkyxliNMfXd24Et5VNcoog0A3D/e7iE875ujOlvjOkfG6s3pVRgRrRp6/NNfUrrtn7jXz/73DKdf+7FhdvgjSMY58GumOOujnCTejZj9+MT6d82xmv8qPa+xxoUHVTlTajFwgXdexBWdACWxcLNA4b4jVd1Q0nz8Qe7++znbQ8WkZHuH/9j3737BrjC/fgK4OsTfB6lfFp82ZUEF+n73ja6Ae9MDiyp3ztkuNdyb71yvLm6h2v6YmdqLCYx/wp++bRTefnSvn775X93QfHeOwL8HWCvontHjOKcrt0IDQ4mwhJClNXK7UOGM6mzzqypXEqaj/9pXF0xn3Rv7wY2AWHAGn+9cUTkE2AU0BhIBB4EvgI+A1oDe3B15yx6A7gY7dWjTsT6QwmsS0jg7JO60SAsrNTxt33/Hcv3xfP82IkMa98+4Lgdh9MZ80x+F81TTgrnvSuKr8Prz1dbNjN/+xbuGjqCjo1K/603w2YjOSuLuKgorMH+p2tQtU+p5+MXkbXAAGOMPW/bGNNHXJcry40x3i+LKoAmflUTGGP419urWL49yVO2/sFxRIeHlBClVMU5kZG7QXlJ3+0ucN2ULdgEpFRFWL13P08vXcHh9AyGtm3NtNEjqF+Kq/bZv67ihWW/k+t00igynI8uO4/2jRsHHD/2lbfZcyy/5/Ldo0dw1eBifz8ev+5I4tI3V3q2z+0fzcLtfzHgmW00DA/jnYvPoVuzwDuxJaal89m6TexJPkb/Vi04q8dJRFj1A0SVj5Ku+P8BBhpj0oqURwMrjTFdK6F+gF7x1zWv/7qKp38uvOhHSHAQP914NXH1/F9zXPjOp6w9mFCs/J2LpzCsfVu/8V0ffRZvM9KfdVJnnj5nUqGy7FwHw59YSlK6a67/DrGRtGh6lD/i9xaLf+ncMxnXtaPf868/kMAVH8/F7nBiczgIDwmhYUQY86ZeSkxEuN94pfKcyACuN4A5ItK6wJO0AT4B3iz/KioFNrudWT8XX+kp1+Hkjq8X+I3PzM31mvQBrp3jvy9BSkqK16QP8M0/2wptf7pqL13vX+hJ+vNuGMrC/xvmNekD3DLvW7/nN8Yw7ZtFZNpysTlcQ7mycnM5nJbBS8v8Dw5TKhA+m3qMMc+ISCawQkTyOgCnAzONMa9WSu1UnbNsZ7zPwR1r9h/0G//cTyt87sv1sbJUQWe+O8fvMUfTc+j3yA+e7bNObs7zF/VGRHjj9z99xjkCGP6YlJHJgZTiw2TsTieLtmzngQmlv0msVFEldgw2xrwGvJbXfbNos49S5a1+uO92fEuQ//GGsfXLdvspNiqCQ+kZPvc/8t1m3lyx27O9fNqptIrJX2ClrIOkrMHBGB8ffWEh2savykdAK3AZY9I06avKMLB1S59dDyd1898P/Zohvidhiw71vlxhQXOv9j4JmnFYsaV19iT9O8Z1Jn7mpEJJH+Csnt18PndkAIk7OjyMfq1aFBuHEGaxcFHfXn7jlQpEQIlfqcr05kWTCSqS+Fo3jOahiWMCiv+/EYO8lv9yy7UBxbeOzh+YbgzkZrYgN7Otp2zDjHHcdJrvqRXuGe19icIlN00N6PxPnzWBVg2jibSGEBESQpjFwvD2bbhyYJ+A4pXyx+8KXNWB9uqpe2x2O++uXMPe4ymcflJnhrUv3WqfKZmZTP30Kw6lpjHppM7cM/7UUsXvTUnhtOc+xZ6VP3fPy5f0ZVKvwNYgyszN5coPv+BASiqnde7AwwF+aOVxGsOfe/dzICWVHk3j6Nwk8K6oSuU5kQFc55T0hMaYeeVUN7808avKZHc4eXPFbmYu2AJAl7h6zP+/4ViC9QuyqllOZADXmSXsM0ClJX5V8zicTlbt2kdSWiZ92jSnZUx0qeKPpKZy4cufkpKVw5juHXjiwomlij94LI0JT72Jw0Cz6Ch+mH5NQHEb96dw19wNbE5IJUTSCTZHsTrCsQSPLNX5larOtKlHlbs9Sce56s3PSc/OwRjXh8Dkft25/+zTAlo4/J45C/h63ZZi5b/fdwP1I0P9xk9+5j22Hyk+BdSSaf+meUPv8wtm2uw8s3gbb/+6G0uQE3EcwiLphY757rZLaddEV7BSNccJrcBVIHiSiEwTkQfyfsq/iqq2uPmDrzmcmk5GTi6Ztlxy7A6+WbOZ79dvDSjeW9IHGDVzdkDx3pI+wNgnvY87/HnrYcY+s4w3V+zmooGtsTh2FUv6AGc8+1FA51equvOb+EXkNeBC4GZcs8OeD5TuTpuqM+KPHOPAsVSKfpHMyrXzyR/r/cbfM8f36Nwcu69FCfNd8MKHfo/Jk5Sewy2fruXKd/4kLCSIz68fQmb6LkT8D/RSqiYLZOnFocaYXiKywRjzPxGZBfgfO6/qpKzc3GJdMfNkelkSsKjDJQyeCkRSuvf1dgsyxjB3zQEemb+ZjBw7t47pxH9GdSDUEswT35Z5cTmlqr1Amnqy3P9mikhzIBcIrE+bqnM6xTXGaik+ACvUEsyEnv4HYD1+/rgynf/D/1xc4v74pAwue2sld3y+no6xUSy4ZQS3julMqLvO700tsTObUrVCIIn/OxFpADwFrAHicU3UplQxluAgHj9/AmEhFs8UCxHWEFo3asClQ3v7jY+tX5/GURFe9z1/6SSv5QU1b1iPIC9fOIyB7q26Mf65ZWzYl8Ijk3vw2XVD6Nik8M3eyMjIYssW5rlyuA6gUrVDqXr1iEgoEGaMSfF7cDnSXj01z96jx/li1UYSUtIY3rktE3p2JjQkkJZFl7vmfM9361w3g63Bwbx37Xn0at084PgzZ73DrqTjADhMKDH1O3IwNZcJ3Zsy46zuNI0ueW7/y175hLX7Dnm2Hz1nDJMH9Az4/EpVB6UewFUkeCjQlgL3BIwx75dnBUuiiV+diIwcO7MWb+Pd33YTWy+Uh87uwfjuTau6WkpVmhMZwJUX+AHQAVgH5HWrMEClJX5VMyUeS+PQsTROat0Eq4/mk5LEJyazK+EoQ7q1Idzqf4K1gpZuOcz0uetJTLNx0YCW3DOpG/XDSje7ZWaOjZSMbGKjo3TUrqpVAvlr7A90MzVhpJeqFpJS07nsqU84dNzVF16AS0b15s5zA5svJyE5hSmPvk+2LX/lz8FdWvPaTef6jT2SlsM989az5J8jBDlziMpJZOHP20jav403bzk/oPPn5Np5dM6PLPxrK0FBgtVi4b9TRjB5cI+A4pWq7gK5jNkE6PdjFbALZ37kSfrg+nr40c/r+Gy5/378AGc//F6hpA/wx9a9zPxsqc8YYwyfrd7HmGd+Ycnmw4TZkqiXtReLMxuA1Tv289AnSwI6/8Of/MCiNduw2R1k2+ykZmYz8/Ol/PZPfEDxSlV3gST+xsBmEVkkIt/k/VR0xVTNtGX/YY6mee9L/9oC/0sHrtmxH5uPgVpf/Or9g2N3UgaXvLGSaV9soGWDUOpl7SEsNxkpsqDJ13/87ff8aVk5LF67jZzcwh882TY7byxa5TdeqZogkKaeGRVdCVV7bD94xOe+tCz/A7jWxx/yuc/uLJzIcx1OXl+2i+d/3E6oJYjHpvSErKM8ucP7eRxO/62VyWmZWIKDvH74JCTr4C5VO/hN/MaYXyqjIqp2GNTZ92werRv7n6FzQt9OPP/1cq/7IkPzb86u3XuMu+dtZMuhNE7v0ZT/ndWdJvXDOJISw5Nzf/YaH271f53TPKY+3sYdB4lwcjsdt6hqB59NPSKywv1vmoikFvhJExG99FFeNWkQxYBOLb3uu+9i/4uRNIuJpnVsA6/77r9oLOk5dmZ88zfnvPobxzNzef3yfrx6WT+a1Hf1y4+NjqJ9XIzX+LsvGO33/CGWYG46cxhhBT4kgkQIs1r4z8QhfuOVqglKWoiljTFmTyXXxyvtx1+zOJ1OnvjiZ776fRM2h5OmDaJ4+PLx9O/UKuDnuPHVL/ltczwGCAsJ5p4LxxBZvxH3f7WJhNRsLh/chjvHd6Gejy6at8z+mmWbdmGA0JBgpp9/KlOGBD4A66f1O3hj0UqOpGRwcrtm3HjGUNo3bRRwvFLVwYmswLXGGNPX/XiuMcZ/X7oKoom/bjucls3/vt3M/A0JdI6L4vFzetGvTcOqrpZS1d6JDOAq2NTZvvyrpFTJ8rpoPjr/H7Jzndw+tjPXndIBq0UHUylVFiUlfuPjsarl7HY7501/l4NJrls5InDTecO5fNLAgOJtNhtjb36NrJz8LpEThnTloesCWz7Rbrcz+d6P2JobQa41ghBbJlf1i+Pm0Z0CijfGsOj3Lbw7fxVHUzLo1bE5N5w/nA4tdMFypaDkxH+y+yauAOEFbugKYIwx9Su8dqpKnHbDK4UGUBkDL36+gqjIUKaMOtlv/IjrXiq2EMvC37dQPzKUOy4r+Qarze5k0B2fcCw0BrEY6qUcIiwrha+W7KNVg7CAPnzen/8nb33zh+d3WLFuF6v/2cf7My6lTTPvN36Vqkt8fmc2xgQbY+obY+oZYyzux3nbmvRrqTVb9hYbNZvn6Q99j5zNs3zdzmJJP89nP5Q8cnfN3mOMe+ZnjoXFEJqdTkzSbsKzUjxtjq/M/dXv+bNtubz17R+FP7hwTcPw5td/+I1Xqi4o/cxZqlb76pdNPvfl2v0vSfjRgtLfhE/PsfPUwi28/8ceIi1C9LH9hOYUX4krkAFYB4+kel0BzOk0bNqZUOq6KVUb6V0yVciAbq197vO2wElRw04uXT+AHzYnMvaZX3j/jz1cMaQtz0/u7DXpA14HVhXVuEEkdh8fUC2a+B9AplRdoIlfFXLmiB74WDKXs0/x3w/+8okDfO7r2TF/5Ovh1Gxu/GgN/35/NfXDQpj7n6HMOKs7o/t19Llm75hBnf2ev35kGGMGFl/0JcxqYeqZg/zGK1UXaOJXxXzyyL8ILnJ536dzC+6+cmxA8e8+UHzd29iGkbx138U4nYZPVu1l9DO/sOSfRO4c34Vvbx5O39b5/fLnPXlVsfN3bRPLo/85I6Dz33PVWE4fdhLWkGCsIcE0io7ggX+Pp2/XwAeQKVWblWrpxaqiA7iqxp6Eo+w6cJQRvdtjOYGFVDbvSmDd9gOcd2ovrFYrO4+kc/e8jazanczg9jE8NqUn7WOjfMbvO3SMHfuPMKRHe8LCSn/+bFsuGVk2GtaLICiQdiqlapkyLb1Y1TTx12w2u5PXftnJSz/tICwkiHsnncQF/VshvtqUlFLl4oSXXlR108xXFjL/p00YA9H1wnnxfxfQvk1swPHx+4/y1aJ1rEtIZ4sJ41CGnTN6NeOBM7vRpF7JC50D7D2QzLyF60hMSmXgyW2ZMKob4WGlW35RKeVdlVzxi0g8kIZrDV+7t0+kgvSKv3Kdd/1sDh1JK1b+2mMX06NLC7/xy1ft4L4XFrKnZTsAxOmkiy2FuY+dT2REqN/43/7ayf1Pf4vd7sDhNISFWmjcMIo3nryMepH+PzSUUi6+rvir8ubuqcaY3v6SvqpcCUdSvCZ9gFtmfOY33m53cNOHqz1JH6Bp/A5sh47wxfw1fuMdDiePvriAHJvd028/O8dO4tE05nyrH/5KlQft1aMKefbNH3zuy7F5XxIxz8b9KXS8byEpEfUAaHD4EC23/0Oww4Et18FPv2/ze/49B45iyy1+ntxcB0sDiFdK+VdVbfwGWCwiBphtjHm96AEici1wLUDr1r4HFanyFRtT+tk4HE7DWS+t4O+DrumcgpwOmu7aTlCRZsTICP9t9BFhVp8jdKMCaCZSSvlXVVf8w91z/Z8O3CgiI4seYIx53RjT3xjTPzY28JuKqmxunTrK574WTYuvjLVw0yE63PO9J+m/e9UARtiPYSnSYScsNIRzT+/j9/xNm0TTrmWjYt0vw0JDOHdiX7/xSin/qiTxG2MOuP89DHwJBDbfr6pwISEhXDal+H9HcJDw4XNXeLbTc+y0u3s+13/4FwCD2sWw67GJjOrShJnTJxPXuD4RYSFEhFuxhgRz1thenDa0S0B1eHTa2TRrEk14gfiJp3Vn7PCu5fNLKlXHVXqvHhGJBIKMMWnux0uAh4wxC33FaK+eypeZmcudj8/lcFIqF53Zv9DV9mu/7GTmgi2e7UW3jqRL03qF4p1Ow8YtB0hOyaB75+Y0aVR4vz/GGDZsOUDy8Qy6dWpGXGOdEFap0qo2A7hEpD2uq3xw3WP42BjzaEkxmvirh4PHsxg68yfP9pVD2zLjrO5VWCOlVEmqzQAuY8wuwP9qHqpa+e+cdcxbe8Cz/ee9Y4it5/tma26ug1V/7uLYsQx69mhJmza6+pVS1YWO3FUlWr/vOGe/nL8AyiOTe3DZ4DYlxuzZk8Rtd3yMzWbH4XBNkTxyRBfuuvMMnTNHqWpAE7/yyu5wcsaLK9hyyDWYq2FECL/fPZqwkOAS44wx3P/gXFJSMgutxLV8xTb69tnE+HH+p3ZWSlUsTfyqmO83JnDDR/mjbN+fOpCRnQPrUrtvXzJJSenFll/Mzs7l2+/WauJXqhrQxK880rJz6TljsWd7WMdGfDB1UKmaZ3Jz7YiPTsI2H2v5KqUqlyZ+BcDLS3fw1KKtnu3Ft42kc1zpumACtG0bS2hoCFlZuYXKrVYLo0/THkBKVQc6V08dt/9YJm2nz/ck/anD2hE/c9IJJX2A4OAg7rv7LMLCQghx3w8IDw+hbZvGTD5bR94qVR3oFX8dZYzhlk/X8c36g56y1feNoXFU2efD6du3Le+9fQ0LF23kSFIa/fq2ZdjQTlgsJd8YVkpVDk38ddDavceY8spvnu3HpvTkkkHlOxFebGx9Lr9sWLk+p1KqfGjir0PsDienP7+c7YfTAWgcZWXFXaf57aKplKpdNPHXEd9tOMhNH6/1bH949SCGd9LRtErVRZr4a7nU7Fx6FeiiOaJTY96fOlAXOleqDtPEX4u9+ON2Zi3JX7Xqh/+OpGOTE+uto5SqPTTx10L7kjMZ8eRSz/Y1I9px76RuVVgjpVR1oom/FjHGcNMna5m/IcFT9td9Y2hUDl00lVK1hyb+WuKvPcc499X8LppPnNuTCwfoWsVKqeI08ddwuQ4n459dxq6kDADi6oeybNqphOpgKaWUD5r4a7Cv1x3glk/XebY//vcghnbULppKqZJp4q+BUrJyOfl/+V00R3WJ5Z0rB2gXTaVUQDTx1zDP/bCN537Y7tn+8fZT6BAbVYU1UkrVNJr4a4i9RzMZ+VR+F83rTmnP3aefVIU1UkrVVJr4qzljDDd8tIYFmw55ytbeP5aGkdYqrJVSqibTxF+NrY5P5rzXfvdsP3leLy7o36oKa6SUqg008VdDuQ4nY575hT1HMwFoHh3G0jtHaRdNpVS50MRfzXy19gC3zsnvovnptYMZ3L5RFdZIKVXbaOKvJlIyczn5ofwumqO7NuHNK/prF02lVLnTxF8NPLN4Ky/8tMOz/dPtp9Beu2gqpSqIJv4qFJ+Uwainf/Zs33hqB+4c37XqKqSUqhM08VcBYwzXfvAXSzYnesrWPTCWBhHaRVMpVfE08VeyVbuTuWB2fhfNWeefzLn9WlZhjZRSdY0m/kpiszs5bdbP7D+WBUCrmHB+/O8orJagKq6ZUqqu0cRfCeb+tZ/bP1/v2f7suiEMbBdThTVSStVlmvgr0PFMG70fWuLZHtctjtmX99MumkqpKqWJv4I8tWgLLy/d6dn++Y5RtG0cWYU1UkopF0385WzXkXROm/WLZ/v/TuvIf8d1qcIaKaVUYZr4y4kxhn+/t5oftxz2lK1/YBzRESFVWCullCpOE385+H3nUS5+4w/P9nMX9mZynxZVWCOllPKt1ib+l//7Dl899z0ADZs34LP9b5T7OXLsDkY99TMJKdkAtG0UwZL/nkJIcNV30czKyOa3r/4kJSmV3qf2oH2vNqWK//v3rdx35uPkZOTQa1R3Zi64r1TxRw4c5empr5CccIxRFw7j0nvPLVX8ofjDPDjlSY4lpjDkzH7cNvv6UsfPOOcpkg8dZ8CE3tz2+nVYLIG/3Q/uTOCusY+QcjSVHsO68r+vpxESEvi3t8z0LD783+fs357AwNP7MvGa0QQFVf37QikAMcZU/klFJgDPA8HAm8aYmSUd379/f7N69eqAn398yIU4Hc5i5fNS3qZevXqlrK13n6/ex51fbPBsf3H9EPq3rR5dNLf+uYO7xj2M0+HEnusgKFgYfs5gpr17Y0DJ567xD7NmyYZi5V+mvkNUlP85hD6f9Q2v3/lBoTJrWAhfHH2H8PBQv/FvTP+Az578plCZiDDv6NtENfB//ncf/JSPHp5buFDg88Q3aNC4gd/4V297h3nPf1+s/IP4V2jaOtZv/NqfNnLXuIcxzvy/raiGkXy4+xUi60f4jVeqvIjIX8aY/sXKKzvxi0gwsA0YC+wH/gQuNsZs9hVTmsS/bN5vPHzes97PHSQstn9W6joXlJxho+/D+V00T+/RlFcu7Vttumg6nU4uaXU9RxOOFSoPiwzlttnXcdolI0qMt9lsTAq71Ou+iPoRfH38vRLjHQ4HE0Iu8rrvpMGdeeG3R0uMt9vtnG692Ou+2FYxfLxndonxAGODzvdaHtOsAXMO+P/m5ys+NDKU79I+9Bt/RtSl5GTaipX3HduLJxbd7zdeqfLiK/FXxXfPgcAOY8wuY4wN+BQ4u7ye/JELnvO5r+AV2ImYuWBLoaS/7M5TefWy6tUvf8fa3WSmZRUrz87I4fu3fvQbP2PK0z73ZaZm+o3/7rXFPvdtWbXd5748n8/61ue+I/uS/cZ//fICn/uSE477jZ/3/Hc+9+Vk5PiN371pr9ekD7B+6d9+45WqDFXRxt8C2Fdgez8wqOhBInItcC1A69atA37yivgGs/NIOqMLdNG8dUwnbh3TudzPUx4cdqfPDyKHzeE3Pjfbe9IKlC071/fOAP5rcjL9J9eSZJcxPiu9bPG5NrvPfVXRrKqUN9X2bpMx5nVjTH9jTP/YWP/tqnn+/cQl5VkHrnh7VaGkv/7BcdU26QN07tee4JDiSzSGRoQy9opRfuPv/vx2n/tCwvzf3Dz75gk+97Xt7n+94MvuP8/nvuhY//dnzr3tDJ/7ohr6H0B3wbSzfO6zWP1fJ3Xu297ncV0HdvQbr1RlqIrEfwAomAFausvKxYV3TPG57739zwf8PL/tTKLd3d/zy7YjADx/UW/iZ04iOrx698sPtgRz36e3ERoRitWdqMOiwug2tDPjrjjFb3xMTD3a9PCeoF/fMMtvvNVq5ZxbJhYrl2DhyR8f8BtvsVg47VLv9yFeWlliHwBP/LgrR3nd97yf+wsAISEhDD9noNd9zy1/yG88wLT3bir+vKEh3F/Ch6pSlakqbu5acN3cHY0r4f8JXGKM8dkAWtpePQDX9b6dXRv2Aq5k+PnRNwLq0ZNjdzD8iaUcSXN95e8QG8nCW0dWiy6apZF86Bg/frScY4kp9B3Ti75jepaqO+Hc577jjbs+xGF30LRtE15d/0RAPXrybPp1C89dP5vUpDT6jO7J7W//B6s18PUGVi1cw9NTXyEzNYtO/drz8Px7iIoKDzj+ryXrefLKl8g4nkmHPm15dOF9pYpf8dVKnrryZbIzcmjWPo7nf32Y6MbRAccn7E7kzekfkbArkd6n9uDKhy7EGqbrLajKVW169bgrMxF4Dld3zreNMSVeip1I4j8Rc/7cy11zN3q25/5nKP3aNKzw8yqlVEXwlfirZACXMeZ7oHhH6SpyND2Hfo/84Nk+o1czXry4T7XqraOUUuWl1o7cDdSj8zfzxvLdnu3l006lVYwOslFK1V51NvHvOJzGmGeWebZvH9uZm0d3qsIaKaVU5ahzid8Yw+VvrWLFjiRP2YYZ46gfQFdFpZSqDepU4l+xPYnL3lrp2X7pkj6c0at5FdZIKaUqX51I/Nm5DoY/8RNJ6a5RqV3i6jH//4ZjqWFdNJVSqjzU+sT/8cq93PNlfhfNL28YSp/W2kVTKVV31erEf9ucdXy51jUoeHLv5jx7YW/toqmUqvNqdeI/uWU0X649wIq7TqVlQ+2iqZRSUMsT/5XD2nHlsHZVXQ2llKpW9O6mUkrVMZr4lVKqjtHEr5RSdYwmfqWUqmM08SulVB2jiV8ppeoYTfxKKVXHaOJXSqk6pkqWXiwtETkC7DnB8MZAkt+jqo7Wr2y0fmWj9Su76lzHNsaY2KKFNSLxl4WIrPa25mR1ofUrG61f2Wj9yq4m1LEobepRSqk6RhO/UkrVMXUh8b9e1RXwQ+tXNlq/stH6lV1NqGMhtb6NXymlVGF14YpfKaVUAZr4lVKqjqk1iV9EJojIVhHZISLTvewPFZE57v0rRaRtJdatlYgsFZHNIvK3iNzi5ZhRIpIiIuvcPw9UVv3c548XkY3uc6/2sl9E5AX367dBRPpWYt26FHhd1olIqojcWuSYSn39RORtETksIpsKlMWIyBIR2e7+1+viziJyhfuY7SJyRSXW7ykR2eL+//tSRBr4iC3xvVCB9ZshIgcK/B9O9BFb4t96BdZvToG6xYvIOh+xFf76lZkxpsb/AMHATqA9YAXWA92KHHMD8Jr78UXAnEqsXzOgr/txPWCbl/qNAr6rwtcwHmhcwv6JwAJAgMHAyir8vz6Ea2BKlb1+wEigL7CpQNmTwHT3LOa/DQAABzxJREFU4+nAE17iYoBd7n8buh83rKT6jQMs7sdPeKtfIO+FCqzfDOCOAP7/S/xbr6j6Fdk/C3igql6/sv7Uliv+gcAOY8wuY4wN+BQ4u8gxZwPvuR9/AYyWSlp53RiTYIxZ436cBvwDtKiMc5ejs4H3jcsfQAMRaVYF9RgN7DTGnOhI7nJhjFkGJBcpLvgeew+Y7CV0PLDEGJNsjDkGLAEmVEb9jDGLjTF29+YfQMvyPm+gfLx+gQjkb73MSqqfO29cAHxS3uetLLUl8bcA9hXY3k/xxOo5xv3mTwEaVUrtCnA3MfUBVnrZPURE1ovIAhHpXqkVAwMsFpG/RORaL/sDeY0rw0X4/oOrytcPIM4Yk+B+fAiI83JMdXkdp+L6BueNv/dCRbrJ3RT1to+msurw+o0AEo0x233sr8rXLyC1JfHXCCISBcwFbjXGpBbZvQZX88XJwIvAV5VcveHGmL7A6cCNIjKyks/vl4hYgbOAz73srurXrxDj+s5fLftKi8i9gB34yMchVfVeeBXoAPQGEnA1p1RHF1Py1X61/1uqLYn/ANCqwHZLd5nXY0TEAkQDRyuldq5zhuBK+h8ZY+YV3W+MSTXGpLsffw+EiEjjyqqfMeaA+9/DwJe4vlIXFMhrXNFOB9YYYxKL7qjq188tMa/5y/3vYS/HVOnrKCJXAmcAl7o/nIoJ4L1QIYwxicYYhzHGCbzh47xV/fpZgHOAOb6OqarXrzRqS+L/E+gkIu3cV4UXAd8UOeYbIK8HxXnAT77e+OXN3Sb4FvCPMeYZH8c0zbvnICIDcf3fVMoHk4hEiki9vMe4bgJuKnLYN8C/3L17BgMpBZo1KovPK62qfP0KKPgeuwL42ssxi4BxItLQ3ZQxzl1W4URkAjANOMsYk+njmEDeCxVVv4L3jKb4OG8gf+sVaQywxRiz39vOqnz9SqWq7y6X1w+uXifbcN3xv9dd9hCuNzlAGK4mgh3AKqB9JdZtOK6v/RuAde6ficD1wPXuY24C/sbVS+EPYGgl1q+9+7zr3XXIe/0K1k+Al92v70agfyX//0biSuTRBcqq7PXD9QGUAOTiame+Gtc9ox+B7cAPQIz72P7AmwVip7rfhzuAqyqxfjtwtY/nvQfzerk1B74v6b1QSfX7wP3e2oArmTcrWj/3drG/9cqon7v83bz3XIFjK/31K+uPTtmglFJ1TG1p6lFKKRUgTfxKKVXHaOJXSqk6RhO/UkrVMZr4lVKqjtHEr2okEblXXDOdbnDPgjioCuowSkS+87FvoIj87J6Bc42IzBeRnmU8388iUqMW9VbVk6WqK6BUaYnIEFyjT/saY3LcI3StVVwtDxGJAz4DLjHG/OYuG45rOoKNRY61mPyJ05SqFHrFr2qiZkCSMSYHwBiTZIw5CCAi/UTkF/cEWYsKTKHQUUR+cE/itkZEOrhHIT8lIpvc86df6D52lPvq+gtxzV//UYFRwRPcZWtwDd335ibgvbyk767jCmPMV+7neFdEXhORlcCT7m8Hv4vIWhH5TUS6uI8LF5FPReQfEfkSCM97PhEZ545ZIyKfu+eBUiowVT2CTH/0p7Q/QBSukafbgFeAU9zlIcD/t3c2IVVFURT+FmKFik0SghoIZYRJBBX9QRQ0L0mQgsBRwwYNaho0iBpG0SwKAqmoCGpSUGakJElk2M8oiqCgWRjUQE6DvdVn+J45fLz1wYFz9r3v3H0Hb99z9+GuPQJ05LgfuJr9l0Bv9lcALcBhQha5iVDS/EI8VPYR6q1ricXRKPH19Qriy9cu4kvmWyxQAwC4Cxys4f814AHQlON25nTyDwB3sn+ywv/NhLDaNmAVMAy05rHTVNGGd3NbqDnVY+qOUsqUpK2EPO5+4KaiEtMroAd4nAv0JuBbaqesKaXcy9//htn0y2ApZZoQWHsGbAd+AmMl9VgUlZY6gSngU0k5Xkk3gEVld3Nl3w48KqXMVF+7ndeFEAy8LqmLkPZoTvte4GL6PCFpIu07gW7gRd7nMuLhZMx/4cBv6pIMmkPAkKS3hCjaODBZStlVee6MaNYS+VPRn2Zp/5VJonrT/fR1h6Q+Yl9ihl8V/bPA01JKr6Jew9Ai84so5nJkCT4ZM4tz/KbuUNTg7aowbQE+Ax+Bjtz8RVKzpE0lqp59lXQo7csltQDPgX5JTZI6iBX2WI1LfwA6Ja3LcbXAexkYkLS7wtZSY96VzEkLD1TYh4Gj6XMPke6BEKHbI2l9HmuVtKHG/MbMw4Hf1CNtRGrkXaY/uoEzJUrx9QHnJb0h9gFmgu8x4ESePwKsJrTSJwglxSfAqVLK92oXzRTRceBhbu4upLdPztEPnFMUBB9Jvy5VmfpCnvua+W8WV4A2Se8JpdnxnP8H8YAYzPsZBTZW89uYf7E6pzHGNBhe8RtjTIPhwG+MMQ2GA78xxjQYDvzGGNNgOPAbY0yD4cBvjDENhgO/McY0GH8BDY+TEhLzfGMAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3 Garis Linear dari Data G1,G2,G3"
      ],
      "metadata": {
        "id": "We5lKMW1uLsB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.array(data['G2'])\n",
        "y = np.array(data['G3'])\n",
        "plt.scatter(x, y, c = y)\n",
        "m, b = np.polyfit(x, y, 1)\n",
        "plt.plot(x, m*x + b)\n",
        "\n",
        "a = np.array(data['G1'])\n",
        "b = np.array(data['G3'])\n",
        "m, b = np.polyfit(a, b, 1)\n",
        "plt.plot(x, m*x + b)\n",
        "\n",
        "c = np.array(data['G1'])\n",
        "d = np.array(data['G2'])\n",
        "m, b = np.polyfit(c, d, 1)\n",
        "plt.plot(x, m*x + b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "-5K61vFEtTD7",
        "outputId": "e831163c-ee52-408d-da8f-382c9c09bb8c"
      },
      "execution_count": 193,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f35b7ab62d0>]"
            ]
          },
          "metadata": {},
          "execution_count": 193
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
